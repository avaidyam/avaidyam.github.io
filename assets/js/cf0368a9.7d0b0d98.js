"use strict";(self.webpackChunkAditya_Vaidyam=self.webpackChunkAditya_Vaidyam||[]).push([[351],{5680:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>d});var r=n(6540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},y="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),y=p(n),u=a,d=y["".concat(s,".").concat(u)]||y[u]||m[u]||i;return n?r.createElement(d,o(o({ref:t},c),{},{components:n})):r.createElement(d,o({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[y]="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8995:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=n(8168),a=(n(6540),n(5680));const i={},o="NSExtension  & PlugInKit",l={permalink:"/blog/2016/07/12/",source:"@site/blog/2016-07-12.md",title:"NSExtension  & PlugInKit",description:"Recently I\u2019ve been doing a lot of reverse engineering in the PrivateFrameworks department, simply out of curiosity. One thing that really always bothered me was how to insert a view hierarchy across processes\u200a\u2014\u200aand I was interested in seeing how Apple had done it. A few frameworks of note the NSXPCConnection API, which internally wraps the libxpc.dylib library, found in /usr/lib/system.",date:"2016-07-12T00:00:00.000Z",formattedDate:"July 12, 2016",tags:[],readingTime:9.47,hasTruncateMarker:!0,authors:[],frontMatter:{},prevItem:{title:"Picture-in-Picture on macOS Sierra",permalink:"/blog/2016/08/05/"}},s={authorsImageUrls:[]},p=[],c={toc:p},y="wrapper";function m(e){let{components:t,...n}=e;return(0,a.yg)(y,(0,r.A)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("p",null,"Recently I\u2019ve been doing a lot of reverse engineering in the ",(0,a.yg)("inlineCode",{parentName:"p"},"PrivateFrameworks")," department, simply out of curiosity. One thing that really always bothered me was how to insert a view hierarchy across processes\u200a\u2014\u200aand I was interested in seeing how Apple had done it. A few frameworks of note: ",(0,a.yg)("inlineCode",{parentName:"p"},"ViewBridge.framework"),", ",(0,a.yg)("inlineCode",{parentName:"p"},"PlugInKit.framework"),", ",(0,a.yg)("inlineCode",{parentName:"p"},"LaunchServices.framework"),", and finally, ",(0,a.yg)("inlineCode",{parentName:"p"},"libextension.dylib"),". The last one is a bit weird because it\u2019s actually a high level Objective-C framework that\u2019s tied into ",(0,a.yg)("inlineCode",{parentName:"p"},"AppKit"),"\u200a\u2014\u200abut for some reason has been relegated to ",(0,a.yg)("inlineCode",{parentName:"p"},"/usr/lib")," (but is now located in ",(0,a.yg)("inlineCode",{parentName:"p"},"Foundation.framework")," in macOS Sierra). All of the frameworks above use a common transmission medium: the ",(0,a.yg)("inlineCode",{parentName:"p"},"NSXPCConnection")," API, which internally wraps the ",(0,a.yg)("inlineCode",{parentName:"p"},"libxpc.dylib")," library, found in ",(0,a.yg)("inlineCode",{parentName:"p"},"/usr/lib/system"),"."))}m.isMDXComponent=!0}}]);